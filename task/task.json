{
  "id": "2f159376-316b-4652-a49c-392f9d534113",
  "name": "OEC-CreatePullRequest",
  "friendlyName": "Create Pull Request",
  "description": "Automatically create a Pull Request for Azure DevOps or GitHub repository from Build or Release pipeline, supports also multi target branch.",
  "helpMarkDown": "[More Information](https://dev.azure.com/horiens-digital/pipelines/_git/extensions?path=/README.md)",
  "categories": "Utility",
  "visibility": ["Build", "Release"],
  "runsOn": ["Agent", "DeploymentGroup"],
  "author": "Romulo Conceicao",
  "version": {
    "Major": 1,
    "Minor": 0,
    "Patch": 0
  },
  "instanceNameFormat": "Create Pull Request",
  "groups": [
    {
      "name": "completion",
      "displayName": "Complete options",
      "isExpanded": true,
      "visibleRule": "repoType=Azure DevOps"
    }
  ],
  "inputs": [
    {
      "name": "repoType",
      "type": "radio",
      "label": "Git repository type",
      "required": true,
      "defaultValue": "Azure DevOps",
      "helpMarkDown": "Choose the git repository type, Azure DevOps (Azure Repos)",
      "options": {
        "Azure DevOps": "Azure DevOps"
      }
    },
    {
      "name": "repositorySelector",
      "type": "radio",
      "label": "Repository to use",
      "required": true,
      "defaultValue": "currentBuild",
      "options": {
        "currentBuild": "Current repository build",
        "select": "Select"
      },
      "helpMarkDown": "The method for selecting the Git repository. `Current build` will use the repository for which the current build is configured. `Select` will allow you to select an Azure Repository from your account.",
      "visibleRule": "repoType=Azure DevOps"
    },
    {
      "name": "projectId",
      "type": "picklist",
      "label": "Project",
      "defaultValue": "",
      "properties": {
        "EditableOptions": "True",
        "DisableManageLink": "True"
      },
      "required": true,
      "helpMarkDown": "Project that contains the git repository you want to create a pull request for.",
      "visibleRule": "repositorySelector = select"
    },
    {
      "name": "gitRepositoryId",
      "type": "picklist",
      "label": "Repository",
      "defaultValue": "",
      "properties": {
        "EditableOptions": "True",
        "DisableManageLink": "True"
      },
      "required": true,
      "helpMarkDown": "Git repository you want to create a pull request for",
      "visibleRule": "repositorySelector = select"
    },
    {
      "name": "isForked",
      "type": "boolean",
      "label": "Is Forked Repository",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If checked, it means the source branch it from a forked repository and not from the original. the target repo will be the currnet build repo.",
      "visibleRule": "repositorySelector = select"
    },
    {
      "name": "sourceBranch",
      "type": "string",
      "label": "Source branch name",
      "defaultValue": "$(Build.SourceBranch)",
      "required": true,
      "helpMarkDown": "The branch name that will be merged (for example - feature). the default is '$(Build.SourceBranch)'."
    },
    {
      "name": "targetBranch",
      "type": "string",
      "label": "Target(s) branch name",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The target branch name (for example - master). Also supports multi target branch with * (for example: test/*)."
    },
    {
      "name": "title",
      "type": "string",
      "label": "Title",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The pull request title. You can use the token [BRANCH_NAME] to dynamically reuse the current target branch name in the pull request title (for example: Merge master into [BRANCH_NAME])."
    },
    {
      "name": "description",
      "type": "string",
      "label": "Description",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The pull request description (optional)."
    },
    {
      "name": "reviewers",
      "type": "string",
      "label": "Reviewers (Azure DevOps: email address or team name, GitHub: username)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The pull request reviewers (optional). <br> For Azure DevOps - one or more email address or team name separated by semicolon. for example: test@test.com;MyTeamName <br> To make the reviewer required add 'req:', for example: 'req:test@test.com' <br> For GitHub - one or more usernames separated by semicolon. for example: username1;username2"
    },
    {
      "name": "tags",
      "type": "string",
      "label": "Tags",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "Pull request tags/labels (optional). tag list separated by semicolon. for example: tag1;tag2"
    },
    {
      "name": "isDraft",
      "type": "boolean",
      "label": "Create Draft Pull Request",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If checked, the pull request will be a Draft Pull Request. <br> For Azure DevOps: see [here](https://docs.microsoft.com/en-us/azure/devops/repos/git/pull-requests?view=azure-devops#draft-pull-requests) more info. <br> For GitHub: see [here](https://github.blog/2019-02-14-introducing-draft-pull-requests/) more info."
    },
    {
      "name": "linkWorkItems",
      "type": "boolean",
      "label": "Link Work Items",
      "defaultValue": true,
      "required": false,
      "helpMarkDown": "If checked, all the work items that linked to the commits will be linked also to the PullRequest.",
      "visibleRule": "repoType=Azure DevOps"
    },
    {
      "name": "passPullRequestIdBackToADO",
      "type": "boolean",
      "label": "Pass Pull Request ID back to Azure DevOps as a variable",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If checked, the Pull Request ID will be passed back to Azure DevOps for use in other pipeline tasks.  The variable can be referenced as '$(pullRequestId)'.  Note the value will be a semicolon-separated list of IDs if multiple target branches are specified (e.g. 'feature/*' or 'branch1;branch2;branch3' )"
    },
    {
      "name": "autoComplete",
      "type": "boolean",
      "label": "Set Auto Complete",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If checked the pull request will close once all branch policies are met.",
      "groupName": "completion"
    },
    {
      "name": "mergeStrategy",
      "type": "picklist",
      "label": "Merge Strategy",
      "defaultValue": "Merge (No fast-forward)",
      "required": false,
      "helpMarkDown": "Specify the strategy used to merge the pull request during completion, see [here](https://devblogs.microsoft.com/devops/pull-requests-with-rebase/) more info.",
      "options": {
        "noFastForward": "Merge (No fast-forward)",
        "squash": "Squash commit",
        "rebase": "Rebase and fast-forward",
        "rebaseMerge": "Rebase and not fast-forward"
      },
      "groupName": "completion",
      "visibleRule": "autoComplete=true"
    },
    {
      "name": "deleteSource",
      "aliases": [
          "deleteSourch"
      ],
      "type": "boolean",
      "label": "Delete Source Branch",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If true, the source branch of the pull request will be deleted after completion.",
      "groupName": "completion",
      "visibleRule": "autoComplete=true"
    },
    {
      "name": "commitMessage",
      "type": "string",
      "label": "Commit Message",
      "required": false,
      "helpMarkDown": "If set, this will be used as the commit message of the merge commit.  If empty the default will be used.",
      "groupName": "completion",
      "visibleRule": "autoComplete=true"
    },
    {
      "name": "transitionWorkItems",
      "type": "boolean",
      "label": "Complete Associated Work Items",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If true, we will attempt to transition any work items linked to the pull request into the next logical state (i.e. Active -> Resolved).",
      "groupName": "completion",
      "visibleRule": "autoComplete=true"
    },
    {
      "name": "bypassPolicy",
      "type": "boolean",
      "label": "Bypass Policy",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If true, policies will be explicitly bypassed while the pull request is completed.",
      "groupName": "completion",
      "visibleRule": "autoComplete=false"
    },
    {
      "name": "bypassReason",
      "type": "string",
      "label": "Bypass reason",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "If policies are bypassed, this reason is stored as to why bypass was used.",
      "groupName": "completion",
      "visibleRule": "bypassPolicy=true"
    }, 
    {
      "name": "alwaysCreatePr",
      "type": "boolean",
      "label": "Always Create Pull Request",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "If checked, a Pull Request will always be created even if there a no changed files.",
      "visibleRule": "repoType=Azure DevOps"
    }
  ],
  "execution": {
    "Python": {
      "target": "pr.py",
      "platforms": ["linux","windows"],
      "workingDirectory": "$(currentDirectory)"
    }
  }
}
